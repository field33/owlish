[package]
name = "owlish"
version = "0.9.0"
edition = "2021"
description = "OWL 2 implementation with wasm support and turtle parsing"
authors = ["Field33", "Florian Loers <florianloers@mailbox.org>"]
readme = "README.md"
license = "MIT OR Apache-2.0"
repository = "https://github.com/field33/owlish"
documentation = "https://docs.rs/owlish"
keywords = ["owl", "rdf", "semantic-web"]

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]
wasm = ["wasm-bindgen"]

[dependencies]
iref = "2"
serde = { version = "1", features = ["derive"] }
serde_json = "1"
wasm-bindgen = { version = "0.2", features = [
    "serde-serialize",
], optional = true }
js-sys = "0.3"
web-sys = { version = "0.3", features = ["console"] }
# harriet = { git = "https://github.com/field33/harriet" }
harriet = "0.2"
time = { version = "0.3", features = ["formatting"] }
# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1", optional = true }

pct-str = "1.1.0"
log = "0.4"
env_logger = "0.9"
serde-wasm-bindgen = "0.4.3"

[dev-dependencies]
wasm-bindgen-test = "0.3.32"
criterion = "0.4"

[[bench]]
name = "benchmarks"
harness = false

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"

[profile.bench]
debug = true
